apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.22.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.adminer.entrypoints: websecure
    traefik.http.routers.adminer.rule: Host("db.local.pfdev.de")
    traefik.http.routers.adminer.tls.certresolver: default
    traefik.http.services.adminer.loadbalancer.server.port: "8080"
  creationTimestamp: null
  labels:
    io.kompose.service: adminer
  name: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: adminer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.22.0 (HEAD)
        traefik.enable: "true"
        traefik.http.routers.adminer.entrypoints: websecure
        traefik.http.routers.adminer.rule: Host("db.local.pfdev.de")
        traefik.http.routers.adminer.tls.certresolver: default
        traefik.http.services.adminer.loadbalancer.server.port: "8080"
      creationTimestamp: null
      labels:
        io.kompose.network/internal: "true"
        io.kompose.network/web: "true"
        io.kompose.service: adminer
    spec:
      containers:
        - image: adminer
          name: adminer
          resources: {}
      restartPolicy: Always
status: {}
